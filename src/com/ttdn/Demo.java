/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ttdn;

import static com.ttdn.IOMaster.readUTF8Text;
import static com.ttdn.IOMaster.writeUTF8Text;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.ListModel;
import vn.edu.vnu.uet.nlp.segmenter.UETSegmenter;

/**
 *
 * @author Admin
 */
public class Demo extends javax.swing.JFrame {

    /**
     * Creates new form Demo
     */
    public Demo() {
        initComponents();
    }

    int rowIndex = -1;
    boolean isNew = true;
    boolean isFind = false;
    String pathOfFile = "";
    List<String> listOfFileName = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnDir = new javax.swing.JButton();
        txtDir = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDocs = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtWord = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnCal = new javax.swing.JButton();
        txtResult = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        txtPathSaveFile = new javax.swing.JTextField();
        btnPath = new javax.swing.JButton();
        lbName = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        btnDir.setText("Select documents direction");
        btnDir.setToolTipText("btnDir");
        btnDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDirActionPerformed(evt);
            }
        });

        txtDir.setToolTipText("txtDir");
        txtDir.setEnabled(false);

        listDocs.setModel(new DefaultListModel()
        );
        listDocs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDocs.setToolTipText("listDocs");
        listDocs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDocsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listDocs);

        jLabel1.setText("Search word");

        btnFind.setText("Find");
        btnFind.setToolTipText("");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnCal.setText("Calculate");
        btnCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalActionPerformed(evt);
            }
        });

        txtResult.setText("0.0");
        txtResult.setEnabled(false);

        jLabel3.setText("List docs in folder");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDir))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCal, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtWord, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtWord, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDir)
                    .addComponent(btnCal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel2.setText("Content of file");

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnPath.setText("Path");
        btnPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPathActionPerformed(evt);
            }
        });

        lbName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbName.setForeground(new java.awt.Color(255, 51, 51));
        lbName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbName.setText("<html><b> DEMO CHƯƠNG TRÌNH TÍNH TOÁN ĐỘ TƯƠNG TỰ GIỮA 2 ĐỐI TƯỢNG<br>SVthực hiện: <br>Đinh Văn Đông 	<br>Trần Thị Diệu Ninh <br>Lớp D10CNPM</br></br></br></br></b></html>");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        txtContent.setColumns(20);
        txtContent.setRows(5);
        txtContent.setEnabled(false);
        jScrollPane1.setViewportView(txtContent);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 166, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(26, 26, 26)
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(26, 26, 26)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPathSaveFile))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathSaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDirActionPerformed
        //chọn đường dẫn thư mục chứa tập doc
        //hien thị đg dẫn ra txt
        //hiển thị ds doc ra list

        String dir = showDialogDirection();
        txtDir.setText(dir);
        showListDocs(dir);

    }//GEN-LAST:event_btnDirActionPerformed

    private String showDialogDirection() {
        String dir = "";
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        chooser.setDialogTitle("Select documents direction");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);//disable the "All files" option
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            dir = chooser.getSelectedFile().toString();
            System.out.println("getCurrentDirection(): " + chooser.getCurrentDirectory());
            System.out.println("getSekectedFile(): " + chooser.getSelectedFile());
        } else {
            System.out.println("No selection");
        }
        return dir;
    }

    private void listDocsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDocsMouseClicked
        // click item show content

        rowIndex = listDocs.getSelectedIndex();
        ListModel<String> models = listDocs.getModel();

        if (isFind) {
            String[] arr = models.getElementAt(rowIndex).split("-");
            pathOfFile = txtDir.getText() + "\\" + arr[1].trim();
        } else {
            pathOfFile = txtDir.getText() + "\\" + models.getElementAt(rowIndex);
        }

        System.out.println("path=" + pathOfFile);
        try {
            txtContent.setText(readUTF8Text(pathOfFile));
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listDocsMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // enable txtContent
        //focused
        txtContent.setEnabled(true);
        txtContent.setEditable(true);
        txtContent.requestFocus();
        isNew = false;
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        //clean
        // enable txtContent
        //focused
        txtContent.setText("");
        txtContent.setEnabled(true);
        txtContent.setEditable(true);
        txtContent.requestFocus();
        isNew = true;
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPathActionPerformed
        // show dialog select path
        txtPathSaveFile.setText(showDialogDirection());
    }//GEN-LAST:event_btnPathActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //if create New -> show dialog to user write name file
        //save to dir 

        if (isNew) {
            if (txtPathSaveFile.getText().isEmpty()) {
                showMessageDialog(null, "You did not select path to save file!", "Error", ERROR_MESSAGE);
            } else {
                String fileName = JOptionPane.showInputDialog("Please input new file name: ");
                fileName += ".txt";

                String path = txtPathSaveFile.getText() + "\\" + fileName;
                System.out.println("File Name =" + fileName);
                System.out.println("Path to save File Name =" + path);
                String content = txtContent.getText();
                try {
                    writeUTF8Text(path, content);
                    showListDocs(txtPathSaveFile.getText());
                    showMessageDialog(null, "Saved successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else {
            if (!pathOfFile.trim().isEmpty()) {
                String content = txtContent.getText();
                try {
                    File file = new File(pathOfFile);
                    file.delete();
                    writeUTF8Text(pathOfFile, content);
                    showMessageDialog(null, "Saved successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                showMessageDialog(null, "No find path of file", "Error", ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // tinh tf_idf của word to docs
        //show doc giảm dần theo độ tương tự
        isFind = true;
        String wordSearch = txtWord.getText();
        List<String> lst = showListDocsWithSimilarity(wordSearch, listOfFileName);

        String[] array = new String[lst.size()];
        lst.toArray(array);
        listDocs.setListData(array);
        listDocs.invalidate();
    }//GEN-LAST:event_btnFindActionPerformed

    private List<String> showListDocsWithSimilarity(String wordSearch, List<String> listFileNames) {
        List<Item> listDocWithSimilarity = new ArrayList<>();
        List<String> res = new ArrayList<>();
        listFileNames.forEach((fileName) -> {
            String path = txtDir.getText() + "\\" + fileName;

            try {
                String content = readUTF8Text(path);
                Double similarity = calculate(wordSearch, content);
                Item item = new Item(similarity, fileName);
                listDocWithSimilarity.add(item);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Demo.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        Collections.sort(listDocWithSimilarity, (Item o1, Item o2) -> {
            return o1.getSimilarity().compareTo(o2.getSimilarity());
        });
        listDocWithSimilarity.forEach((i) -> {
            res.add((1 - i.getSimilarity()) + " - " + i.getName());
        });

        return res;
    }
    private void btnCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalActionPerformed
        // tinh tf_idf của word to doc selected
        isFind = false;
        if (!pathOfFile.trim().isEmpty()) {

            txtResult.setText("0.0");
            String content = txtContent.getText();
            String wordSearch = txtWord.getText();
            txtResult.setText(calculate(wordSearch, content).toString());

        } else {
            showMessageDialog(null, "Select a file in docs list before calculate!", "Warning", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnCalActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // delete file in folder
        if (!pathOfFile.trim().isEmpty()) {
            File file = new File(pathOfFile);
            file.delete();
            showListDocs(txtDir.getText());
            showMessageDialog(null, "Deleted successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
            txtContent.setText("");
        } else {
            showMessageDialog(null, "No find path of file", "Error", ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private Double calculate(String a, String b) {
        //tf_idf
        Double result = 0.0;

        Sentence s1 = new Sentence(a);
        Sentence s2 = new Sentence(b);
        List<Sentence> lstSen;
        lstSen = new ArrayList<>();
        lstSen.add(s1);
        lstSen.add(s2);
        //Segment text using UETSegmenter+
        //Tách từ có nghĩa trong câu
        String modelsPath = "models";
        UETSegmenter segmenter = new UETSegmenter(modelsPath); // construct the segmenter
        lstSen.stream().map((sentence) -> {
            sentence.setSentence(segmenter.segment(sentence.getSentence()));
            return sentence;
        }).forEachOrdered((sentence) -> {
            System.out.println("Sentences=" + sentence.getSentence());
        });

        Converter converter = new Converter(lstSen);
        List<List<Double>> vecList = converter.toWord2Vec();
//        System.out.println("vecList size=" + vecList.size());

        SimilarCalculator calculator = new SimilarCalculator();
        int size = vecList.size();
        for (int i = 0; i < size - 1; ++i) {
            for (int j = i + 1; j < size; ++j) {
                result = calculator.euclideanDistance(vecList.get(i), vecList.get(j));
                System.out.println(i + "vs " + j + " => diff = "
                        + result);
            }
        }
        return result;
    }

    private void showListDocs(String dir) {

        File folder = new File(dir);
        File[] listOfFiles = folder.listFiles();

        listOfFileName.clear();
        for (File file : listOfFiles) {
            if (file.isFile()) {
                listOfFileName.add(file.getName());
            }
        }
        String[] array = new String[listOfFileName.size()];
        listOfFileName.toArray(array);
        listDocs.setListData(array);
        listDocs.invalidate();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Demo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Demo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCal;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDir;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPath;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbName;
    private javax.swing.JList<String> listDocs;
    private javax.swing.JTextArea txtContent;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtPathSaveFile;
    private javax.swing.JTextField txtResult;
    private javax.swing.JTextField txtWord;
    // End of variables declaration//GEN-END:variables
}
